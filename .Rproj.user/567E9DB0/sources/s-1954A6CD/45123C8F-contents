---
title: "Tamaño de muestra"
author: "CJJM"
date: "15/9/2021"
output:
  ioslides_presentation:
    logo: images/negocios.jpg
    widescreen: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
```

## Tamaño de muestra | Para poblaciones finitas

<div class="centered">
$n = \frac{Z^2Npq}{r^2(N-1)+Z^2pq}$
</div>

Donde:

* n : tamaño de muestra
* N: tamaño de la población
* p: proporción de la variable de referencia
* q: 1-p
* Z: valor crítico de la normal estándar a un nivel de confianza determinado.
* r: error absoluto teórico (máximo)


## Tamaño de muestra | Efecto del tamaño de la población bajo selección aleatoria simple

```{r, echo=TRUE}
N <- seq(100, 30000, by=10) # Secuencia del 100 al 30,000 con saltos de 10 en 10
r = 0.05 # Error absoluto de +/-5%
p = 0.5 # Proporción de 50%
q = 1-p
Z = 1.96 # Valor para un nivel de 95% de confianza

n <- ((Z^2)*N*p*q) / (((r^2)*(N-1)) + ((Z^2)*p*q)) # Tamaño de muestra

datos <- cbind(N, n) # Pega los vectores N y n por posición
datos <-as.data.frame(datos) # Convierte el objeto datos a la clase DATAFRAME
```

```
library(ggplot2)  
ggplot(datos) +  
  geom_line(mapping = aes(x = N, y = n))
```


## Tamaño de muestra | Efecto del tamaño de la población bajo selección aleatoria simple

```{r}
ggplot(datos) +
  geom_line(mapping = aes(x = N, y = n))
```



## Tamaño de muestra | Efecto del error bajo selección aleatoria simple

```{r, echo=TRUE}
r <- seq(0.00001, 0.15, length.out=1000)
N = 25000
p = 0.5
q = 1-p
Z = 1.96
n <- ((Z^2)*N*p*q) / (((r^2)*(N-1)) + ((Z^2)*p*q))
datos <- cbind(N, n)
datos <-as.data.frame(datos)
```

```
library(ggplot2)  
ggplot(datos) +  
  geom_line(mapping = aes(x = r, y = n))
```


## Tamaño de muestra | Efecto del error bajo selección aleatoria simple

```{r}
ggplot(datos) +
  geom_line(mapping = aes(x = r, y = n))
```



## Tamaño de muestra | Efecto de la proporción bajo selección aleatoria simple

```{r, echo=TRUE}
p <- seq(0.01, 1, length.out=100)
N = 25000
r = 0.05
q = 1-p
Z = 1.96
n <- ((Z^2)*N*p*q) / (((r^2)*(N-1)) + ((Z^2)*p*q))
datos <- cbind(N, n)
datos <-as.data.frame(datos)
```

```
library(ggplot2)  
ggplot(datos) +  
  geom_line(mapping = aes(x = p, y = n))
```


## Tamaño de muestra | Efecto de la proporción bajo selección aleatoria simple

```{r}
ggplot(datos) +
  geom_line(mapping = aes(x = p, y = n))
```




## Tamaño de muestra | Confianza {.flexbox .vcenter}

![Confianza](images/altura_norm02.png)


